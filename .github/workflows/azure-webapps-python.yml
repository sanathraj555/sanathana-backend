name: Build and deploy Python app to Azure Web App

env:
  AZURE_WEBAPP_NAME: sanathana-backend  # Set this to the name of your Azure Web App
  PYTHON_VERSION: '3.10'               # Set this to the Python version to use

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4  # Check out the code from the repository

      - name: Set up Python version
        uses: actions/setup-python@v3.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      # Example:
      # - name: Run tests
      #   run: pytest

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .  # Upload the entire directory except for the virtual environment
            !venv/

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'  # You can change this to 'Production' or another environment name
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: .

      - name: Login to Azure
        uses: azure/login@v2  # Using the latest stable version of the Azure login action
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # Use the Azure credentials stored in GitHub secrets

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}  # Reference the Web App name from the environment variable
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}  # Use the publish profile secret
